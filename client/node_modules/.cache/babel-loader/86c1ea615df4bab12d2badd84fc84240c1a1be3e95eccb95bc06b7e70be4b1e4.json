{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport api from \"../../services/api\";\nexport const fetchUserTeams = createAsyncThunk(\"teams/fetchUserTeams\", async (_, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await api.get(\"/teams\");\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nexport const createTeam = createAsyncThunk(\"teams/createTeam\", async (teamData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await api.post(\"/teams\", teamData);\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nexport const updateRoster = createAsyncThunk(\"teams/updateRoster\", async ({\n  teamId,\n  rosterData\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await api.put(`/teams/${teamId}/roster`, rosterData);\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nconst teamSlice = createSlice({\n  name: \"teams\",\n  initialState: {\n    teams: [],\n    loading: false,\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchUserTeams.pending, state => {\n      state.loading = true;\n    }).addCase(fetchUserTeams.fulfilled, (state, action) => {\n      state.loading = false;\n      state.teams = action.payload;\n      state.error = null;\n    }).addCase(fetchUserTeams.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    }).addCase(createTeam.fulfilled, (state, action) => {\n      state.teams.push(action.payload);\n    }).addCase(updateRoster.fulfilled, (state, action) => {\n      const index = state.teams.findIndex(team => team.id === action.payload.id);\n      if (index !== -1) {\n        state.teams[index] = action.payload;\n      }\n    });\n  }\n});\nexport default teamSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","api","fetchUserTeams","_","rejectWithValue","response","get","data","error","createTeam","teamData","post","updateRoster","teamId","rosterData","put","teamSlice","name","initialState","teams","loading","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","push","index","findIndex","team","id","reducer"],"sources":["/home/mbeale/Development/code/phase-5/Fantasy_Cycling/client/src/store/slices/teamSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport api from \"../../services/api\";\n\nexport const fetchUserTeams = createAsyncThunk(\n  \"teams/fetchUserTeams\",\n  async (_, { rejectWithValue }) => {\n    try {\n      const response = await api.get(\"/teams\");\n      return response.data;\n    } catch (error) {\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\nexport const createTeam = createAsyncThunk(\n  \"teams/createTeam\",\n  async (teamData, { rejectWithValue }) => {\n    try {\n      const response = await api.post(\"/teams\", teamData);\n      return response.data;\n    } catch (error) {\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\nexport const updateRoster = createAsyncThunk(\n  \"teams/updateRoster\",\n  async ({ teamId, rosterData }, { rejectWithValue }) => {\n    try {\n      const response = await api.put(`/teams/${teamId}/roster`, rosterData);\n      return response.data;\n    } catch (error) {\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\nconst teamSlice = createSlice({\n  name: \"teams\",\n  initialState: {\n    teams: [],\n    loading: false,\n    error: null,\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchUserTeams.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(fetchUserTeams.fulfilled, (state, action) => {\n        state.loading = false;\n        state.teams = action.payload;\n        state.error = null;\n      })\n      .addCase(fetchUserTeams.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n      })\n      .addCase(createTeam.fulfilled, (state, action) => {\n        state.teams.push(action.payload);\n      })\n      .addCase(updateRoster.fulfilled, (state, action) => {\n        const index = state.teams.findIndex(\n          (team) => team.id === action.payload.id\n        );\n        if (index !== -1) {\n          state.teams[index] = action.payload;\n        }\n      });\n  },\n});\n\nexport default teamSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}